# compare_final.ps1 - Test edilmiş çalışan versiyon

Clear-Host
Write-Host "====================================" -ForegroundColor Cyan
Write-Host "   Prosedur Karsilastirma Final" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Cyan
Write-Host ""

# Kullanıcı bilgileri
$username = Read-Host "Oracle kullanici"
$password = Read-Host "Oracle sifre"
$database = Read-Host "Database"
$procdir = Read-Host "Prosedur dizini"

# Dosya formatı
Write-Host "`nDosya adi formati:" -ForegroundColor Yellow
Write-Host "1. PROSEDUR.prc" -ForegroundColor Gray
Write-Host "2. SCHEMA.PROSEDUR.prc" -ForegroundColor Gray
$format = Read-Host "Secim (1 veya 2)"
$useSchemaInFilename = ($format -eq "2")

# Dizin kontrolü
if (-not (Test-Path $procdir)) {
    Write-Host "HATA: Dizin bulunamadi!" -ForegroundColor Red
    Read-Host "Enter"
    exit
}

# Liste oku
$procedures = Get-Content "liste.txt"
$total = $procedures.Count

Write-Host "`nToplam $total prosedur kontrol edilecek." -ForegroundColor Yellow
Write-Host ""

# Sonuç değişkenleri
$results = @()
$same = 0
$different = 0
$notfound_db = 0
$notfound_file = 0

$startTime = Get-Date

# Ana döngü
$count = 0
foreach ($line in $procedures) {
    $count++
    
    if ([string]::IsNullOrWhiteSpace($line)) { continue }
    
    $parts = $line.Split('.')
    if ($parts.Count -ne 2) { continue }
    
    $schema = $parts[0].Trim()
    $procname = $parts[1].Trim()
    
    Write-Host "`r[$count/$total] $schema.$procname kontrol ediliyor...                    " -NoNewline
    
    # Dosya adı
    if ($useSchemaInFilename) {
        $fileName = "$schema.$procname.prc"
    } else {
        $fileName = "$procname.prc"
    }
    
    # Lokal dosya bul
    $localFile = $null
    foreach ($variant in @($fileName, $fileName.ToUpper(), $fileName.ToLower())) {
        $testPath = Join-Path $procdir $variant
        if (Test-Path $testPath) {
            $localFile = $testPath
            break
        }
    }
    
    if ($null -eq $localFile) {
        $results += "$schema.$procname - LOKAL DOSYA YOK"
        $notfound_file++
        continue
    }
    
    # SQL dosyası oluştur
    $sqlContent = @"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SET LINESIZE 32767
SET TRIMSPOOL ON
SET TERMOUT OFF
SET LONG 1000000
SET LONGCHUNKSIZE 32767
SELECT text FROM all_source 
WHERE owner = UPPER('$schema') 
AND name = UPPER('$procname') 
AND type = 'PROCEDURE'
ORDER BY line;
EXIT;
"@
    
    $sqlFile = "temp_$($procname).sql"
    $tempFile = "temp_$($procname).out"
    
    try {
        # SQL dosyasını oluştur
        $sqlContent | Out-File -FilePath $sqlFile -Encoding ASCII
        
        # SQLPlus'ı CMD üzerinden çalıştır (@ sorunu olmaması için)
        $cmdCommand = "sqlplus -s $username/$password@$database < $sqlFile > $tempFile 2>&1"
        & cmd /c $cmdCommand
        
        # Sonuç kontrolü
        if (-not (Test-Path $tempFile) -or (Get-Item $tempFile).Length -eq 0) {
            $results += "$schema.$procname - DB'DE YOK"
            $notfound_db++
        }
        else {
            # İçerik oku
            $dbContent = Get-Content $tempFile -Raw -ErrorAction SilentlyContinue
            $fileContent = Get-Content $localFile -Raw -ErrorAction SilentlyContinue
            
            if ($null -eq $dbContent) { $dbContent = "" }
            if ($null -eq $fileContent) { $fileContent = "" }
            
            # Normalize et
            $dbContent = ($dbContent -replace "`r`n", "`n" -replace "`r", "`n").Trim()
            $fileContent = ($fileContent -replace "`r`n", "`n" -replace "`r", "`n").Trim()
            
            # Karşılaştır
            if ($dbContent -eq $fileContent) {
                $same++
            } else {
                $results += "$schema.$procname - FARKLI (DB: $($dbContent.Length) byte, Dosya: $($fileContent.Length) byte)"
                $different++
            }
        }
    }
    catch {
        $results += "$schema.$procname - HATA: $_"
    }
    finally {
        # Temizlik
        Remove-Item $sqlFile -Force -ErrorAction SilentlyContinue
        Remove-Item $tempFile -Force -ErrorAction SilentlyContinue
    }
}

Write-Host "`r                                                                                "

$endTime = Get-Date
$duration = ($endTime - $startTime).TotalSeconds

# Rapor oluştur
$report = @"
Prosedur Karsilastirma Raporu
Tarih: $(Get-Date -Format "dd.MM.yyyy HH:mm:ss")
Sure: $duration saniye
Dosya Formati: $(if($useSchemaInFilename){'SCHEMA.PROSEDUR.prc'}else{'PROSEDUR.prc'})
=============================

FARKLI/SORUNLU PROSEDURLER:
---------------------------
$($results -join "`n")

===== OZET =====
Toplam: $total
Ayni: $same
Farkli: $different
DB'de Yok: $notfound_db
Lokal Dosya Yok: $notfound_file
================
"@

$report | Out-File -FilePath "fark.txt" -Encoding UTF8

# CSV raporu
$csvData = @("Schema;Prosedur;Durum;Detay")
foreach ($item in $results) {
    if ($item -match "^(.+?)\.(.+?) - (.+)$") {
        $csvData += "$($matches[1]);$($matches[2]);$($matches[3]);"
    }
}
$csvData | Out-File -FilePath "karsilastirma_raporu.csv" -Encoding UTF8

# Özet göster
Write-Host ""
Write-Host "====================================" -ForegroundColor Green
Write-Host "          OZET RAPOR" -ForegroundColor Green
Write-Host "====================================" -ForegroundColor Green
Write-Host "Toplam: $total"
Write-Host "Ayni: $same" -ForegroundColor Green
Write-Host "Farkli: $different" -ForegroundColor Red
Write-Host "DB'de Yok: $notfound_db" -ForegroundColor Yellow
Write-Host "Lokal Dosya Yok: $notfound_file" -ForegroundColor Yellow
Write-Host "Sure: $duration saniye" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Green

if ($results.Count -gt 0) {
    Write-Host "`nDetaylar:" -ForegroundColor Yellow
    Write-Host "- fark.txt (detayli rapor)" -ForegroundColor Gray
    Write-Host "- karsilastirma_raporu.csv (Excel raporu)" -ForegroundColor Gray
    
    $open = Read-Host "`nFark.txt'yi acmak ister misiniz? (E/H)"
    if ($open -eq 'E' -or $open -eq 'e') {
        Start-Process notepad.exe fark.txt
    }
} else {
    Write-Host "`nTum prosedurler ayni!" -ForegroundColor Green
}

Read-Host "`nCikmak icin Enter'a basin"
