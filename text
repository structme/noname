# PRC dosyalarını yeniden adlandırma script'i
# UTF-8 encoding ayarla
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$OutputEncoding = [System.Text.Encoding]::UTF8

# Klasör yolunu buraya girin
$rootPath = "C:\YourFolderPath"  # Bu yolu kendi klasör yolunuzla değiştirin

# Tüm .prc dosyalarını bul (alt klasörler dahil)
$prcFiles = Get-ChildItem -Path $rootPath -Filter "*.prc" -Recurse

Write-Host "Toplam $($prcFiles.Count) adet .prc dosyası bulundu." -ForegroundColor Green

foreach ($file in $prcFiles) {
    try {
        Write-Host "`nİşleniyor: $($file.FullName)" -ForegroundColor Yellow
        
        # Dosyanın ilk satırını oku
        $firstLine = Get-Content -Path $file.FullName -TotalCount 1
        
        if ([string]::IsNullOrWhiteSpace($firstLine)) {
            Write-Host "  UYARI: Dosya boş veya ilk satır boş - Atlanıyor" -ForegroundColor Red
            continue
        }
        
        Write-Host "  İlk satır: $firstLine" -ForegroundColor Cyan
        
        # İlk satırdan şema ve prosedür adını çıkar
        # Format: create or replace procedure şema.pr_prosedüradi
        # Case insensitive arama yapıyoruz
        if ($firstLine -match "(?i)create\s+or\s+replace\s+procedure\s+([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)") {
            
            $schema = $matches[1].ToUpper()
            $procedureName = $matches[2].ToUpper()
            
            # Yeni dosya adı
            $newFileName = "$schema.$procedureName.prc"
            $newFilePath = Join-Path -Path $file.DirectoryName -ChildPath $newFileName
            
            Write-Host "  Şema: $schema" -ForegroundColor Green
            Write-Host "  Prosedür: $procedureName" -ForegroundColor Green
            Write-Host "  Yeni dosya adı: $newFileName" -ForegroundColor Green
            
            # Eğer yeni dosya adı mevcut dosya adından farklıysa yeniden adlandır
            if ($file.Name -ne $newFileName) {
                # Hedef dosya zaten varsa kontrol et
                if (Test-Path -Path $newFilePath) {
                    Write-Host "  UYARI: Hedef dosya zaten mevcut ($newFileName) - Atlanıyor" -ForegroundColor Red
                    continue
                }
                
                # Dosyayı yeniden adlandır
                Rename-Item -Path $file.FullName -NewName $newFileName
                Write-Host "  BAŞARILI: Dosya '$($file.Name)' -> '$newFileName' olarak yeniden adlandırıldı" -ForegroundColor Green
            } else {
                Write-Host "  BİLGİ: Dosya adı zaten doğru formatta" -ForegroundColor Blue
            }
            
        } else {
            Write-Host "  HATA: İlk satır beklenen formatta değil" -ForegroundColor Red
            Write-Host "  Beklenen format: 'create or replace procedure şema.prosedür_adı'" -ForegroundColor Red
        }
        
    } catch {
        Write-Host "  HATA: $($_.Exception.Message)" -ForegroundColor Red
    }
}

Write-Host "`nİşlem tamamlandı!" -ForegroundColor Green
Write-Host "Script yeniden adlandırılan dosyaları yukarıda gösteriyor." -ForegroundColor Yellow
Read-Host "Çıkmak için Enter tuşuna basın"
