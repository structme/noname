# test_sqlplus_export.ps1 - SQLPlus export sorununu test et

Clear-Host
Write-Host "====================================" -ForegroundColor Cyan
Write-Host "   SQLPlus Export Test" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Cyan
Write-Host ""

# Kullanıcı bilgileri
$username = Read-Host "Oracle kullanici"
$password = Read-Host "Oracle sifre"
$database = Read-Host "Database"

# Test prosedürü
$testLine = Get-Content "liste.txt" | Select-Object -First 1
$parts = $testLine.Split('.')
$schema = $parts[0]
$procname = $parts[1]

Write-Host "`nTest edilecek: $schema.$procname" -ForegroundColor Yellow
Write-Host ""

# TEST 1: Parametre ile export
Write-Host "TEST 1: Parametre ile export (&1, &2)" -ForegroundColor Cyan
@"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SET LINESIZE 32767
SET TRIMSPOOL ON
SET TERMOUT OFF
SET LONG 1000000
SELECT text FROM all_source WHERE owner = UPPER('&1') AND name = UPPER('&2') AND type = 'PROCEDURE' ORDER BY line;
EXIT;
"@ | Out-File -FilePath "test1.sql" -Encoding ASCII

Write-Host "Komut: sqlplus -s ... @test1.sql $schema $procname" -ForegroundColor Gray
$result1 = & sqlplus -s "$username/$password@$database" "@test1.sql" $schema $procname | Out-String
Write-Host "Sonuc uzunlugu: $($result1.Length) karakter" -ForegroundColor Yellow

if ($result1.Length -gt 0) {
    $result1 | Out-File "test1_output.txt"
    Write-Host "Sonuc test1_output.txt'ye kaydedildi" -ForegroundColor Green
}

# TEST 2: Doğrudan değerlerle export
Write-Host "`nTEST 2: Dogrudan degerlerle export" -ForegroundColor Cyan
@"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SET LINESIZE 32767
SET TRIMSPOOL ON
SET TERMOUT OFF
SET LONG 1000000
SELECT text FROM all_source WHERE owner = UPPER('$schema') AND name = UPPER('$procname') AND type = 'PROCEDURE' ORDER BY line;
EXIT;
"@ | Out-File -FilePath "test2.sql" -Encoding ASCII

Write-Host "Komut: sqlplus -s ... @test2.sql" -ForegroundColor Gray
$result2 = & sqlplus -s "$username/$password@$database" "@test2.sql" | Out-String
Write-Host "Sonuc uzunlugu: $($result2.Length) karakter" -ForegroundColor Yellow

if ($result2.Length -gt 0) {
    $result2 | Out-File "test2_output.txt"
    Write-Host "Sonuc test2_output.txt'ye kaydedildi" -ForegroundColor Green
}

# TEST 3: DEFINE kullanarak
Write-Host "`nTEST 3: DEFINE kullanarak" -ForegroundColor Cyan
@"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SET LINESIZE 32767
SET TRIMSPOOL ON
SET TERMOUT OFF
SET LONG 1000000
SET VERIFY OFF
DEFINE v_schema = '&1'
DEFINE v_proc = '&2'
SELECT text FROM all_source WHERE owner = UPPER('&&v_schema') AND name = UPPER('&&v_proc') AND type = 'PROCEDURE' ORDER BY line;
EXIT;
"@ | Out-File -FilePath "test3.sql" -Encoding ASCII

Write-Host "Komut: sqlplus -s ... @test3.sql $schema $procname" -ForegroundColor Gray
$result3 = & sqlplus -s "$username/$password@$database" "@test3.sql" $schema $procname | Out-String
Write-Host "Sonuc uzunlugu: $($result3.Length) karakter" -ForegroundColor Yellow

if ($result3.Length -gt 0) {
    $result3 | Out-File "test3_output.txt"
    Write-Host "Sonuc test3_output.txt'ye kaydedildi" -ForegroundColor Green
}

# TEST 4: Process ile çalıştırma
Write-Host "`nTEST 4: Start-Process ile" -ForegroundColor Cyan
$tempFile = "test4_output.txt"

$process = Start-Process -FilePath "sqlplus" `
    -ArgumentList "-s", "$username/$password@$database", "@test1.sql", $schema, $procname `
    -NoNewWindow -Wait -RedirectStandardOutput $tempFile -PassThru

if (Test-Path $tempFile) {
    $fileSize = (Get-Item $tempFile).Length
    Write-Host "Dosya boyutu: $fileSize byte" -ForegroundColor Yellow
    
    if ($fileSize -gt 0) {
        Write-Host "Ilk 200 karakter:" -ForegroundColor Gray
        $content = Get-Content $tempFile -Raw
        Write-Host $content.Substring(0, [Math]::Min(200, $content.Length)) -ForegroundColor DarkGray
    }
}

# TEST 5: Sadece satır sayısı kontrolü
Write-Host "`nTEST 5: Satirlari say" -ForegroundColor Cyan
@"
SET HEADING OFF
SET FEEDBACK OFF
SELECT COUNT(*) || ' satir bulundu' FROM all_source WHERE owner = UPPER('$schema') AND name = UPPER('$procname') AND type = 'PROCEDURE';
EXIT;
"@ | Out-File -FilePath "test5.sql" -Encoding ASCII

$result5 = & sqlplus -s "$username/$password@$database" "@test5.sql"
Write-Host $result5 -ForegroundColor Yellow

# Karşılaştırma
Write-Host "`n===== SONUC KARSILASTIRMA =====" -ForegroundColor Green
Write-Host "Test 1 (Parametre): $($result1.Length) karakter" -ForegroundColor $(if($result1.Length -gt 0){"Green"}else{"Red"})
Write-Host "Test 2 (Dogrudan): $($result2.Length) karakter" -ForegroundColor $(if($result2.Length -gt 0){"Green"}else{"Red"})
Write-Host "Test 3 (DEFINE): $($result3.Length) karakter" -ForegroundColor $(if($result3.Length -gt 0){"Green"}else{"Red"})
Write-Host "Test 4 (Process): $fileSize byte" -ForegroundColor $(if($fileSize -gt 0){"Green"}else{"Red"})

# Temizlik
Remove-Item "test*.sql", "test*_output.txt" -Force -ErrorAction SilentlyContinue

Write-Host "`nONERI:" -ForegroundColor Yellow
if ($result2.Length -gt 0 -and $result1.Length -eq 0) {
    Write-Host "Parametre kullanimi calismiyor. Dogrudan deger kullanin." -ForegroundColor Red
}

Read-Host "`nEnter'a basin"
