# debug_db_connection.ps1 - DB bağlantı ve prosedür sorunu debug

Clear-Host
Write-Host "====================================" -ForegroundColor Cyan
Write-Host "   DB Baglanti ve Prosedur Debug" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Cyan
Write-Host ""

# Kullanıcı bilgileri
$username = Read-Host "Oracle kullanici"
$password = Read-Host "Oracle sifre"
$database = Read-Host "Database"

Write-Host "`n1. Baglanti testi..." -ForegroundColor Yellow

# Bağlantı testi
@"
SET HEADING OFF
SET FEEDBACK OFF
SELECT 'Baglanti OK - User: ' || USER || ' - DB: ' || ORA_DATABASE_NAME FROM DUAL;
EXIT;
"@ | Out-File -FilePath "test.sql" -Encoding ASCII

$result = & sqlplus -s "$username/$password@$database" "@test.sql" 2>&1
Write-Host $result -ForegroundColor Green

Write-Host "`n2. Liste.txt'den ilk prosedur bilgisi..." -ForegroundColor Yellow

# İlk prosedürü al
$firstLine = Get-Content "liste.txt" | Select-Object -First 1
$parts = $firstLine.Split('.')
$testSchema = $parts[0]
$testProc = $parts[1]

Write-Host "Test edilecek: $testSchema.$testProc" -ForegroundColor Cyan

Write-Host "`n3. ALL_OBJECTS kontrolu..." -ForegroundColor Yellow

# ALL_OBJECTS kontrolü
@"
SET HEADING OFF
SET FEEDBACK OFF
SELECT 'ALL_OBJECTS''da bulunan: ' || COUNT(*) 
FROM all_objects 
WHERE owner = UPPER('$testSchema')
AND object_name = UPPER('$testProc')
AND object_type = 'PROCEDURE';
EXIT;
"@ | Out-File -FilePath "test.sql" -Encoding ASCII

$result = & sqlplus -s "$username/$password@$database" "@test.sql"
Write-Host $result

Write-Host "`n4. Tum object type kontrolu..." -ForegroundColor Yellow

# Tüm object type'ları kontrol et
@"
SET HEADING OFF
SET FEEDBACK OFF
SET LINESIZE 200
SELECT object_type || ': ' || COUNT(*) as sonuc
FROM all_objects 
WHERE owner = UPPER('$testSchema')
AND object_name = UPPER('$testProc')
GROUP BY object_type;
EXIT;
"@ | Out-File -FilePath "test.sql" -Encoding ASCII

$result = & sqlplus -s "$username/$password@$database" "@test.sql"
Write-Host $result

Write-Host "`n5. Export SQL testi..." -ForegroundColor Yellow

# Export SQL'i test et
@"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SET LINESIZE 32767
SET TRIMSPOOL ON
SET TERMOUT OFF
SET LONG 1000000
SELECT text FROM all_source 
WHERE owner = UPPER('$testSchema') 
AND name = UPPER('$testProc') 
AND type = 'PROCEDURE' 
ORDER BY line;
EXIT;
"@ | Out-File -FilePath "test_export.sql" -Encoding ASCII

Write-Host "SQLPlus komutu: sqlplus -s `"$username/****@$database`" @test_export.sql $testSchema $testProc" -ForegroundColor Gray

# Export et ve göster
$exportResult = & sqlplus -s "$username/$password@$database" "@test_export.sql" 2>&1 | Out-String

Write-Host "Export sonucu uzunlugu: $($exportResult.Length) karakter" -ForegroundColor Cyan

if ($exportResult.Length -gt 0) {
    Write-Host "Ilk 200 karakter:" -ForegroundColor Gray
    Write-Host $exportResult.Substring(0, [Math]::Min(200, $exportResult.Length)) -ForegroundColor DarkGray
}

Write-Host "`n6. Parametre kullanimi testi..." -ForegroundColor Yellow

# & parametreli SQL
@"
SET HEADING OFF
SET FEEDBACK OFF
SET VERIFY OFF
DEFINE schema_param = '&1'
DEFINE proc_param = '&2'
SELECT 'Parametre test - Schema: ' || '&&schema_param' || ', Proc: ' || '&&proc_param' FROM DUAL;
SELECT COUNT(*) || ' kayit bulundu' 
FROM all_objects 
WHERE owner = UPPER('&&schema_param')
AND object_name = UPPER('&&proc_param')
AND object_type = 'PROCEDURE';
EXIT;
"@ | Out-File -FilePath "param_test.sql" -Encoding ASCII

$result = & sqlplus -s "$username/$password@$database" "@param_test.sql" $testSchema $testProc 2>&1
Write-Host $result

Write-Host "`n7. Package icerisinde mi kontrolu..." -ForegroundColor Yellow

# Package kontrolü
@"
SET HEADING OFF
SET FEEDBACK OFF
SELECT 'Package kontrolu:' FROM DUAL;
SELECT object_name || ' (' || object_type || ')'
FROM all_objects 
WHERE owner = UPPER('$testSchema')
AND object_name LIKE '%' || UPPER('$testProc') || '%'
AND object_type IN ('PACKAGE', 'PACKAGE BODY')
AND ROWNUM <= 5;
EXIT;
"@ | Out-File -FilePath "test.sql" -Encoding ASCII

$result = & sqlplus -s "$username/$password@$database" "@test.sql"
Write-Host $result

Write-Host "`n8. Yetki kontrolu..." -ForegroundColor Yellow

# Yetki kontrolü
@"
SET HEADING OFF
SET FEEDBACK OFF
SELECT 'Gordugunuz schema sayisi: ' || COUNT(DISTINCT owner)
FROM all_objects 
WHERE object_type = 'PROCEDURE';

SELECT DISTINCT owner 
FROM all_objects 
WHERE object_type = 'PROCEDURE'
AND ROWNUM <= 10
ORDER BY owner;
EXIT;
"@ | Out-File -FilePath "test.sql" -Encoding ASCII

$result = & sqlplus -s "$username/$password@$database" "@test.sql"
Write-Host $result

# Temizlik
Remove-Item "test.sql", "test_export.sql", "param_test.sql" -Force -ErrorAction SilentlyContinue

Write-Host "`n9. Manuel SQL testi..." -ForegroundColor Yellow
Write-Host "Asagidaki SQL'i SQLPlus'ta manuel calistirip sonucu kontrol edin:" -ForegroundColor Cyan
Write-Host @"
SELECT owner, object_name, object_type, status
FROM all_objects
WHERE owner = UPPER('$testSchema')
AND object_name = UPPER('$testProc');
"@ -ForegroundColor Gray

Read-Host "`nEnter'a basin"
