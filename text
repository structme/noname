# compare_normalized.ps1 - Satır sonu ve boşluk sorunları çözülmüş versiyon

Clear-Host
Write-Host "====================================" -ForegroundColor Cyan
Write-Host "   Prosedur Karsilastirma v3" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Cyan
Write-Host ""

# Kullanıcı bilgileri
$username = Read-Host "Oracle kullanici"
$password = Read-Host "Oracle sifre"
$database = Read-Host "Database"
$procdir = Read-Host "Prosedur dizini"

# Dosya formatı
Write-Host "`nDosya adi formati:" -ForegroundColor Yellow
Write-Host "1. PROSEDUR.prc" -ForegroundColor Gray
Write-Host "2. SCHEMA.PROSEDUR.prc" -ForegroundColor Gray
$format = Read-Host "Secim (1 veya 2)"
$useSchemaInFilename = ($format -eq "2")

# Karşılaştırma modu
Write-Host "`nKarsilastirma modu:" -ForegroundColor Yellow
Write-Host "1. Normal (birebir ayni)" -ForegroundColor Gray
Write-Host "2. Esnek (bosluk/satir sonu farklarini yoksay)" -ForegroundColor Gray
$compareMode = Read-Host "Secim (1 veya 2)"
$flexibleCompare = ($compareMode -eq "2")

# Dizin kontrolü
if (-not (Test-Path $procdir)) {
    Write-Host "HATA: Dizin bulunamadi!" -ForegroundColor Red
    Read-Host "Enter"
    exit
}

# Normalizasyon fonksiyonu
function Normalize-Content {
    param($content)
    
    # Satır sonu karakterlerini düzelt
    $normalized = $content -replace "`r`n", "`n" -replace "`r", "`n"
    
    # Satır sonundaki boşlukları temizle
    $normalized = $normalized -split "`n" | ForEach-Object { $_.TrimEnd() } | Join-String -Separator "`n"
    
    # Birden fazla boş satırı tek satıra indir
    $normalized = $normalized -replace "`n`n+", "`n`n"
    
    # Başındaki ve sonundaki boşlukları temizle
    $normalized = $normalized.Trim()
    
    # Tab karakterlerini boşluğa çevir
    $normalized = $normalized -replace "`t", "    "
    
    # Birden fazla boşluğu tek boşluğa indir (opsiyonel)
    if ($flexibleCompare) {
        $normalized = $normalized -replace " +", " "
        # Büyük/küçük harf duyarsız (opsiyonel)
        # $normalized = $normalized.ToUpper()
    }
    
    return $normalized
}

# Liste oku
$procedures = Get-Content "liste.txt"
$total = $procedures.Count

Write-Host "`nToplam $total prosedur kontrol edilecek." -ForegroundColor Yellow
Write-Host "Karsilastirma modu: $(if($flexibleCompare){'Esnek'}else{'Normal'})" -ForegroundColor Cyan
Write-Host ""

# Debug için ilk karşılaştırmayı göster
$showFirstDiff = Read-Host "Ilk farki detayli goster? (E/H)"
$debugFirst = ($showFirstDiff -eq 'E' -or $showFirstDiff -eq 'e')

# Sonuç değişkenleri
$results = @()
$same = 0
$different = 0
$notfound_db = 0
$notfound_file = 0
$firstDiffShown = $false

$startTime = Get-Date

# Ana döngü
$count = 0
foreach ($line in $procedures) {
    $count++
    
    if ([string]::IsNullOrWhiteSpace($line)) { continue }
    
    $parts = $line.Split('.')
    if ($parts.Count -ne 2) { continue }
    
    $schema = $parts[0].Trim()
    $procname = $parts[1].Trim()
    
    Write-Host "`r[$count/$total] $schema.$procname kontrol ediliyor...                    " -NoNewline
    
    # Dosya adı
    if ($useSchemaInFilename) {
        $fileName = "$schema.$procname.prc"
    } else {
        $fileName = "$procname.prc"
    }
    
    # Lokal dosya bul
    $localFile = $null
    foreach ($variant in @($fileName, $fileName.ToUpper(), $fileName.ToLower())) {
        $testPath = Join-Path $procdir $variant
        if (Test-Path $testPath) {
            $localFile = $testPath
            break
        }
    }
    
    if ($null -eq $localFile) {
        $results += "$schema.$procname - LOKAL DOSYA YOK"
        $notfound_file++
        continue
    }
    
    # SQL dosyası
    $sqlContent = @"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SET LINESIZE 32767
SET TRIMSPOOL ON
SET TERMOUT OFF
SET LONG 1000000
SET LONGCHUNKSIZE 32767
SELECT text FROM all_source 
WHERE owner = UPPER('$schema') 
AND name = UPPER('$procname') 
AND type = 'PROCEDURE'
ORDER BY line;
EXIT;
"@
    
    $sqlFile = "temp_$($procname).sql"
    $tempFile = "temp_$($procname).out"
    
    try {
        # SQL dosyasını oluştur
        $sqlContent | Out-File -FilePath $sqlFile -Encoding ASCII
        
        # SQLPlus çalıştır
        $cmdCommand = "sqlplus -s $username/$password@$database < $sqlFile > $tempFile 2>&1"
        & cmd /c $cmdCommand
        
        # Sonuç kontrolü
        if (-not (Test-Path $tempFile) -or (Get-Item $tempFile).Length -eq 0) {
            $results += "$schema.$procname - DB'DE YOK"
            $notfound_db++
        }
        else {
            # İçerik oku
            $dbContent = Get-Content $tempFile -Raw -ErrorAction SilentlyContinue
            $fileContent = Get-Content $localFile -Raw -ErrorAction SilentlyContinue
            
            if ($null -eq $dbContent) { $dbContent = "" }
            if ($null -eq $fileContent) { $fileContent = "" }
            
            # Orijinal boyutlar
            $dbOriginalSize = $dbContent.Length
            $fileOriginalSize = $fileContent.Length
            
            # Normalize et
            $dbNormalized = Normalize-Content $dbContent
            $fileNormalized = Normalize-Content $fileContent
            
            # Karşılaştır
            if ($dbNormalized -eq $fileNormalized) {
                $same++
            } else {
                $different++
                
                # Detaylı bilgi
                $diffInfo = "FARKLI - DB: $dbOriginalSize byte ($($dbNormalized.Length) normalized), " +
                           "Dosya: $fileOriginalSize byte ($($fileNormalized.Length) normalized)"
                
                $results += "$schema.$procname - $diffInfo"
                
                # İlk farkı debug et
                if ($debugFirst -and -not $firstDiffShown) {
                    $firstDiffShown = $true
                    Write-Host "`n`n===== ILK FARK DETAYI =====" -ForegroundColor Yellow
                    Write-Host "Prosedur: $schema.$procname" -ForegroundColor Cyan
                    Write-Host "DB Boyut: $dbOriginalSize -> $($dbNormalized.Length) (normalize)" -ForegroundColor Gray
                    Write-Host "Dosya Boyut: $fileOriginalSize -> $($fileNormalized.Length) (normalize)" -ForegroundColor Gray
                    
                    # Satır satır karşılaştır
                    $dbLines = $dbNormalized -split "`n"
                    $fileLines = $fileNormalized -split "`n"
                    
                    Write-Host "`nSatir sayilari - DB: $($dbLines.Count), Dosya: $($fileLines.Count)" -ForegroundColor Gray
                    
                    # İlk farklı satırı bul
                    $maxLines = [Math]::Max($dbLines.Count, $fileLines.Count)
                    for ($i = 0; $i -lt $maxLines; $i++) {
                        $dbLine = if ($i -lt $dbLines.Count) { $dbLines[$i] } else { "<SATIR YOK>" }
                        $fileLine = if ($i -lt $fileLines.Count) { $fileLines[$i] } else { "<SATIR YOK>" }
                        
                        if ($dbLine -ne $fileLine) {
                            Write-Host "`nIlk farkli satir: $($i+1)" -ForegroundColor Red
                            Write-Host "DB   : [$dbLine]" -ForegroundColor Yellow
                            Write-Host "Dosya: [$fileLine]" -ForegroundColor Yellow
                            
                            # Hex değerleri göster
                            if ($dbLine.Length -gt 0 -and $fileLine.Length -gt 0) {
                                Write-Host "`nKarakter kodlari:" -ForegroundColor Gray
                                $dbBytes = [System.Text.Encoding]::UTF8.GetBytes($dbLine)
                                $fileBytes = [System.Text.Encoding]::UTF8.GetBytes($fileLine)
                                Write-Host "DB   : $($dbBytes -join ' ')" -ForegroundColor DarkGray
                                Write-Host "Dosya: $($fileBytes -join ' ')" -ForegroundColor DarkGray
                            }
                            break
                        }
                    }
                    
                    # Debug dosyaları oluştur
                    $dbNormalized | Out-File "debug_db_$procname.txt" -Encoding UTF8
                    $fileNormalized | Out-File "debug_file_$procname.txt" -Encoding UTF8
                    Write-Host "`nDebug dosyalari olusturuldu:" -ForegroundColor Gray
                    Write-Host "- debug_db_$procname.txt" -ForegroundColor DarkGray
                    Write-Host "- debug_file_$procname.txt" -ForegroundColor DarkGray
                    Write-Host "=========================`n" -ForegroundColor Yellow
                }
            }
        }
    }
    catch {
        $results += "$schema.$procname - HATA: $_"
    }
    finally {
        # Temizlik
        Remove-Item $sqlFile -Force -ErrorAction SilentlyContinue
        Remove-Item $tempFile -Force -ErrorAction SilentlyContinue
    }
}

Write-Host "`r                                                                                "

$endTime = Get-Date
$duration = ($endTime - $startTime).TotalSeconds

# Rapor
$report = @"
Prosedur Karsilastirma Raporu
Tarih: $(Get-Date -Format "dd.MM.yyyy HH:mm:ss")
Sure: $duration saniye
Karsilastirma Modu: $(if($flexibleCompare){'Esnek (bosluk/satir sonu farklari yoksayildi)'}else{'Normal (birebir karsilastirma)'})
=============================

FARKLI/SORUNLU PROSEDURLER:
---------------------------
$($results -join "`n")

===== OZET =====
Toplam: $total
Ayni: $same
Farkli: $different
DB'de Yok: $notfound_db
Lokal Dosya Yok: $notfound_file
================
"@

$report | Out-File -FilePath "fark.txt" -Encoding UTF8

# Özet
Write-Host ""
Write-Host "====================================" -ForegroundColor Green
Write-Host "          OZET RAPOR" -ForegroundColor Green
Write-Host "====================================" -ForegroundColor Green
Write-Host "Toplam: $total"
Write-Host "Ayni: $same" -ForegroundColor Green
Write-Host "Farkli: $different" -ForegroundColor Red
Write-Host "DB'de Yok: $notfound_db" -ForegroundColor Yellow
Write-Host "Lokal Dosya Yok: $notfound_file" -ForegroundColor Yellow
Write-Host "Sure: $duration saniye" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Green

if ($different -gt 0) {
    Write-Host "`nONERI:" -ForegroundColor Yellow
    if (-not $flexibleCompare) {
        Write-Host "Bosluk/satir sonu farklarindan dolayi farkli gorunuyor olabilir." -ForegroundColor Gray
        Write-Host "Esnek karsilastirma modunu (2) deneyin." -ForegroundColor Gray
    }
}

Read-Host "`nEnter'a basin"
